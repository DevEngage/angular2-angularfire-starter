{
  "_args": [
    [
      {
        "name": "cpr",
        "raw": "cpr@https://registry.npmjs.org/cpr/-/cpr-0.4.2.tgz",
        "rawSpec": "https://registry.npmjs.org/cpr/-/cpr-0.4.2.tgz",
        "scope": null,
        "spec": "https://registry.npmjs.org/cpr/-/cpr-0.4.2.tgz",
        "type": "remote"
      },
      "/Users/th3brink/Sandbox/means-stack/node_modules/angular-cli/node_modules/ember-cli"
    ]
  ],
  "_from": "cpr@0.4.2",
  "_id": "cpr@0.4.2",
  "_inCache": true,
  "_location": "/angular-cli/ember-cli/cpr",
  "_phantomChildren": {
    "minimatch": "3.0.2"
  },
  "_requested": {
    "name": "cpr",
    "raw": "cpr@https://registry.npmjs.org/cpr/-/cpr-0.4.2.tgz",
    "rawSpec": "https://registry.npmjs.org/cpr/-/cpr-0.4.2.tgz",
    "scope": null,
    "spec": "https://registry.npmjs.org/cpr/-/cpr-0.4.2.tgz",
    "type": "remote"
  },
  "_requiredBy": [
    "/angular-cli/ember-cli"
  ],
  "_resolved": "https://registry.npmjs.org/cpr/-/cpr-0.4.2.tgz",
  "_shasum": "cc5083e6d2fa31f52bbfeefae508a445fe6180f2",
  "_shrinkwrap": null,
  "_spec": "cpr@https://registry.npmjs.org/cpr/-/cpr-0.4.2.tgz",
  "_where": "/Users/th3brink/Sandbox/means-stack/node_modules/angular-cli/node_modules/ember-cli",
  "author": {
    "email": "davglass@gmail.com",
    "name": "Dav Glass"
  },
  "bugs": {
    "url": "http://github.com/davglass/cpr/issues"
  },
  "contributors": [
    {
      "email": "tmpvar@gmail.com",
      "name": "Elijah Insua"
    }
  ],
  "dependencies": {
    "graceful-fs": "~4.1.2",
    "mkdirp": "~0.5.0",
    "rimraf": "~2.4.3"
  },
  "description": "cp -R",
  "devDependencies": {
    "istanbul": "~0.3.5",
    "jshint": "~0.9.1",
    "vows": "~0.8.1",
    "yui-lint": "~0.1.0"
  },
  "homepage": "https://github.com/davglass/cpr#readme",
  "keywords": [
    "copy",
    "recursive",
    "cp -r",
    "cp"
  ],
  "license": "BSD-3-Clause",
  "main": "./lib/index.js",
  "name": "cpr",
  "optionalDependencies": {},
  "readme": "CPR (cp -R)\n===========\n\nThere are other modules out there that attempt this,\nbut none did it the way I needed it to be done or\nthey had issues and the author failed to fix them in a\ntimely manner.\n\n\nInstall\n-------\n\n    npm install cpr\n\n\nBuild Status\n------------\n\n[![Build Status](https://secure.travis-ci.org/davglass/cpr.png)](http://travis-ci.org/davglass/cpr)\n\nUsage\n-----\n\n```js\nvar cpr = require('cpr');\n//or\nvar cpr = require('cpr').cpr; //Back compat\n\ncpr('/path/from', '/path/to', {\n    deleteFirst: true, //Delete \"to\" before\n    overwrite: true, //If the file exists, overwrite it\n    confirm: true //After the copy, stat all the copied files to make sure they are there\n}, function(err, files) {\n    //err - The error if any (err.list might be available with an array of errors for more detailed information)\n    //files - List of files that we copied\n});\n\ncpr('/path/from', '/path/to', function(err, files) {\n    //err - The error if any (err.list might be available with an array of errors for more detailed information)\n    //files - List of files that we copied\n});\n```\n\nOptions\n-------\n\n   * `deleteFirst`: Delete the to directory with `rimraf`\n   * `overwrite`: If the destination exists, overwrite it\n   * `confirm`: After the copy operation, stat all the files and report errors if any are missing\n   * `filter`: `RegExp` or `function` to test each file against before copying\n\n\nFiltering\n---------\n\nIf you give it a `RegExp`, it will use that to `test` the filename as they are being gathered. If it passes, it will be removed.\nIf you give it a `function`, it will use that with `Array.filter` on the list of files.\n\n\n![cpr](../master/cpr.jpg?raw=true)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/davglass/cpr.git"
  },
  "scripts": {
    "pretest": "jshint --config ./node_modules/yui-lint/jshint.json ./lib/",
    "test": "istanbul cover --print both -- vows --spec ./tests/full.js",
    "windows-test": "vows --spec ./tests/full.js"
  },
  "version": "0.4.2"
}
